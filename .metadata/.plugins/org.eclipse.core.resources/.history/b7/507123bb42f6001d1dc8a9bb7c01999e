package fr.fms;

import java.util.List;

import java.util.Scanner;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.CommandLineRunner;


import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Sort;

import fr.fms.dao.ArticleDao;
import fr.fms.dao.CategoryDao;
import fr.fms.entities.Article;
import fr.fms.entities.Category;
import fr.fms.job.ArticleService;




@SpringBootApplication
public class SpringShopJpaTpApplication implements CommandLineRunner {
	@Autowired
	public  ArticleDao articles;
	@Autowired
	public  CategoryDao categories;
	@Autowired
	public ArticleService articleService;
	
	
	
	private static final int PAGE_SIZE = 5;
	
	public static final int MAX_STRING_LENGTH = 50;
	public static final String COLOR_GREEN_BG = "\u001B[42m";
	public static final String COLOR_RESET_BG ="\u001B[0m";
	public static final String COLOR_WHITE_BG = "\u001B[47m";
	public static final String COLOR_BLACK = "\u001B[30m";
	public static final String COLOR_RED = "\u001B[31m";

	public static void main(String[] args) {

		SpringApplication.run(SpringShopJpaTpApplication.class, args);
	}

	@Override
	public void run(String... args) throws Exception {

		 	
	        int currentPage = 0;
	        boolean exit = false;
	        PageRequest pageRequest = PageRequest.of(currentPage, PAGE_SIZE, Sort.by("id").ascending());
      	    Page<Article> allData = articles.findAll(pageRequest);
        	displayFormationPagination(allData);
        	
	        
	        
	        while (!exit) {

	      	    PageRequest pageRequest = PageRequest.of(currentPage, PAGE_SIZE, Sort.by("id").ascending());
	      	    Page<Article> allData = articles.findAll(pageRequest);
	        	displayFormationPagination(allData);


	          
	            
	            
	        }
	        
	        displayMenu();
	        updateArticle();
	        

		
	    }
	
    public void displayFormationPagination(Page<Article> list, int currentPage) {
    	Scanner scanner = new Scanner(System.in);
  	  	System.out.println("----------------------------------------------------------------------------------");
  	  	System.out.println(COLOR_GREEN_BG + "      Bienvenue dans notre Shop ! Voici les articles disponibles !       " + COLOR_RESET_BG);
  	  	System.out.println("----------------------------------------------------------------------------------");
        
        Page<Article> page = list;

        System.out.printf("Page %d/%d%n", page.getNumber() + 1, page.getTotalPages());
        System.out.println("----------------------------------------------------------------------------------");
        System.out.printf("|%-5s |%-45s |%-15s |%-8s |%n", "Id", "DESCRIPTION", "BRAND", "PRIX");
        System.out.println("----------------------------------------------------------------------------------");

        page.getContent().forEach(article -> {
            System.out.printf("|%-5d |%-45s |%-15s |%-8.2f€ |%n", article.getId(), article.getDescription(),
                    article.getBrand(), article.getPrice());
        });

        System.out.println("----------------------------------------------------------------------------------");
        System.out.println("Commandes :");
        System.out.println("n - Page suivante");
        System.out.println("p - Page précédente");

        String input = scanner.next();
        switch (input) {
            case "n":
            	if(currentPage +1  < list.getTotalPages()) {
            		currentPage++;
            	}
            	
                break;
            case "p":
                if (currentPage > 0) {
                    currentPage--;
                }
                break;
            default:
                System.out.println("Commande invalide");
        }
    }
	
    public static void displayMenu() {
    	System.out.printf("---------------------------------------------------------%n");
		System.out.printf("Que voulez vous faire ? Entrez le numéro correspondant : %n");
		System.out.printf("---------------------------------------------------------%n");
		System.out.printf("|%-5s |%-40s |%n","1-"," Afficher tout les articles ");
		System.out.printf("--------------------------------------------------%n");
		System.out.printf("|%-5s |%-40s |%n","1-"," Ajouter un article ");
		System.out.printf("--------------------------------------------------%n");
		System.out.printf("|%-5s |%-40s |%n","2-"," Supprimer un article ");
		System.out.printf("--------------------------------------------------%n");
		System.out.printf("|%-5s |%-40s |%n","3-"," Modifier un article ");
		System.out.printf("--------------------------------------------------%n");;
		System.out.printf("|%-5s |%-40s |%n","4-"," Afficher un article ");
		System.out.printf("--------------------------------------------------%n");
		System.out.printf("|%-5s |%-40s |%n","5-"," Ajouter une catégorie ");
		System.out.printf("--------------------------------------------------%n");
		System.out.printf("|%-5s |%-40s |%n","6-"," Supprimer une catégorie ");
		System.out.printf("--------------------------------------------------%n");
		System.out.printf("|%-5s |%-40s |%n","7-"," Modifier une catégorie ");
		System.out.printf("--------------------------------------------------%n");
		System.out.printf("|%-5s |%-40s |%n","8-"," Afficher une catégorie ");
		System.out.printf("--------------------------------------------------%n");
		System.out.printf("|%-5s |%-40s |%n","9-"," Afficher les articles par catégorie ");
		System.out.printf("--------------------------------------------------%n");
    }
    
    public  void newArticle() {
    	Scanner scan = new Scanner(System.in);
    	System.out.println("Choisissez la marque de l'article");
    	String brand = scan.nextLine();
    	System.out.println("Choisissez la description de l'article");
    	String description = scan.nextLine();
    	System.out.println("Choisissez le prix de l'article");
    	double price = scan.nextDouble();
    	System.out.println("Choisissez l'id de la categorie correspondant a l'article");
    	long category = scan.nextLong();
    	scan.close();
    	Category cat = categories.findById( category).get();
    	articles.save(new Article(description, brand, price, cat));		
    }
    
    public void deleteArticle() {
    	Scanner scan = new Scanner(System.in);
    	System.out.println("Choisissez l'id de l'article a supprimer");
    	long category = scan.nextLong();
    	articles.deleteById(category);
    }
    
    public void updateArticle() {
    	Scanner scan = new Scanner(System.in);
    	
    	System.out.println("Choisissez l'id de l'article");
    	int id = scan.nextInt();
    	
    	System.out.println("Choisissez la marque de l'article");
    	String brand = scan.nextLine();
    	scan.nextLine();
    	System.out.println("Choisissez la description de l'article");
    	String description = scan.nextLine();
    	
    	System.out.println("Choisissez le prix de l'article");
    	double price = scan.nextDouble();
    	
    	System.out.println("Choisissez l'id de la categorie correspondant a l'article");
    	long category = scan.nextLong();
    	
    	articleService.UpdateArticle(id, description, brand, price, category);
    	scan.close();
    	
    }
}
